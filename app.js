"use strict";(()=>{var D=1e3/20,g=class extends HTMLElement{intervalId=null;item;constructor(){super()}async connectedCallback(){let e=this.attachShadow({mode:"open"}),t=this.item;if(!t||!t.animation)throw new Error("animated item is required");let o=document.createElement("canvas"),a=t.image.width,r=t.animation;o.width=a,o.height=a,o.style.imageRendering="pixelated",o.style.width="64px",o.style.height="64px";let i=o.getContext("2d",{willReadFrequently:!0});if(!i)throw new Error("No canvas context");i.imageSmoothingEnabled=!1;let s=0,c=0,m=H(t.image),d=a**2*4;this.intervalId=setInterval(()=>{c++>=r.frames[s].frameTime&&(c=0,s=(s+1)%r.frames.length);let u=a*r.frames[s].index;if(i.clearRect(0,0,a,a),i.drawImage(t.image,0,u,a,a,0,0,a,a),!r.interpolate)return;let h=c/r.frames[s].frameTime,x=(s+1)%r.frames.length,L=r.frames[x].index,O=d*L,f=i.getImageData(0,0,a,a);for(let p=0;p<f.data.length;p++)f.data[p]=$(h,f.data[p],m.data[O+p]);i.putImageData(f,0,0,0,0,a,a)},D),e.append(o)}disconnectedCallback(){this.intervalId!=null&&clearInterval(this.intervalId)}};function $(n,e,t){return n*(t-e)+e}function H(n){let e=document.createElement("canvas");e.width=n.width,e.height=n.height;let t=e.getContext("2d");if(!t)throw new Error("No canvas context");return t.imageSmoothingEnabled=!1,t.drawImage(n,0,0),t.getImageData(0,0,n.width,n.height)}var b=class extends HTMLElement{item;dataSource;constructor(){super()}async connectedCallback(){let e=this.attachShadow({mode:"open"}),t=document.createElement("div");if(t.style.minWidth="64px",t.style.minHeight="64px",e.append(t),!this.item||!this.dataSource)throw new Error("item and data source are required");let o=await this.dataSource.loadItem(this.item),a=P(o);t.append(a)}};function P(n){if(n.animation){let t=document.createElement("animated-texture");return t.item=n,t}let e=document.createElement("div");return e.style.backgroundImage=`url(${n.image.src})`,e.style.backgroundSize="contain",e.style.backgroundRepeat="no-repeat",e.style.backgroundPosition="center",e.style.imageRendering="pixelated",e.style.width="64px",e.style.height="64px",e}var w=class extends HTMLElement{teardown;text;constructor(){super()}connectedCallback(){let e=this.attachShadow({mode:"open"}),t=this.text??"",o=document.createElement("div");o.addEventListener("mouseenter",r=>{let i=document.createElement("div");i.classList.add("tooltip"),i.innerText=t,this.positionTooltip(i,r),document.body.append(i);let s=c=>{this.positionTooltip(i,c)};document.body.addEventListener("mousemove",s),this.teardown=()=>{document.body.removeEventListener("mousemove",s),i.remove()}}),o.addEventListener("mouseleave",()=>{this.teardown?.()});let a=document.createElement("slot");o.append(a),e.append(o)}positionTooltip(e,t){let{width:o,height:a}=e.getBoundingClientRect(),r=v(window.innerWidth,o,t.clientX),i=v(window.innerHeight,a,t.clientY),s=[!r&&`left: ${t.clientX+10}px;`,r&&`right: ${window.innerWidth-t.clientX+10}px;`,!i&&`top: ${t.clientY+10}px;`,i&&`bottom: ${window.innerHeight-t.clientY+10}px;`].filter(c=>c).join("");e.setAttribute("style",s)}disconnectedCallback(){this.teardown?.()}};function v(n,e,t){return t>=n-e-10-10}function T(){return{subfolders:new Map,items:new Map}}function I(n,e){let t=e.width,o=e.height/t,a=n.animation.frametime??1,r=n.animation.interpolate??!1,i=n.animation.frames;return{interpolate:r,frames:i?C(i,a):A(o,a)}}function A(n,e){return[...new Array(n)].map((t,o)=>({frameTime:e,index:o}))}function C(n,e){return n.map(t=>typeof t=="number"?{index:t,frameTime:e}:{index:t.index,frameTime:t.time})}var l=class{constructor(e,t,o,a){this.username=e;this.repo=t;this.branch=o;this.root=a}getNavBarClass(){return"github"}addDescriptionToNav(e){let t=document.createElement("div");t.innerText=`${this.username}/${this.repo}`;let o=document.createElement("div");o.innerText="GitHub",e.append(t),e.append(o)}addItemsToMenu(e){let t=document.createElement("div");t.innerText="View on GitHub",t.addEventListener("click",()=>{window.open(`https://github.com/${this.username}/${this.repo}`)}),e.append(t)}async getRootFolder(){let e=`https://api.github.com/repos/${this.username}/${this.repo}/git/trees/${this.branch}?recursive=1`,t=await fetch(e),{tree:o}=await t.json(),a=T(),r=/^(.*)\/(.*)\.png(\.mcmeta)?$/;for(let i of o){let s=i.path.match(r);if(!s)continue;let[,c,m,d]=s;if(!c.startsWith(this.root))continue;let u=this.findOrCreateSubfolder(a,c),h=d!=null;(!u.items.has(m)||h)&&u.items.set(m,{imagePath:`${c}/${m}.png`,mcMetaPath:h?`${c}/${m}.png.mcmeta`:void 0})}return a}async loadItem(e){let t=await this.loadImage(e.imagePath),o=await this.loadMcMeta(e.mcMetaPath,t);return{image:t,animation:o}}findOrCreateSubfolder(e,t){let o=t.split("/"),a=e;for(let r of o)a.subfolders.has(r)||a.subfolders.set(r,T()),a=a.subfolders.get(r);return a}getGithubUserContentPath(e){return`https://raw.githubusercontent.com/${this.username}/${this.repo}/${this.branch}/${e}`}loadImage(e){return new Promise(t=>{let o=new Image;o.src=this.getGithubUserContentPath(e),o.crossOrigin="anonymous",o.addEventListener("load",()=>{t(o)})})}async loadMcMeta(e,t){if(e)try{let a=await(await fetch(this.getGithubUserContentPath(e))).json();return I(a,t)}catch(o){console.error(`Couldn't load ${e}:`,o)}}};async function E(n){_(n),k(n),N(n),B(),await G(n)}function _(n){document.querySelector("nav").setAttribute("class",n.getNavBarClass())}function k(n){let e=document.querySelector(".dataSource");e.innerHTML="",n.addDescriptionToNav(e)}function N(n){let e=document.querySelector("#dataSourceMenuExtraItems");if(e.innerHTML="",n.addItemsToMenu?.(e),e.childNodes.length>0){let t=document.createElement("div");t.classList.add("divider"),e.append(t)}}function B(){let n=document.querySelector("#search");n.value=""}async function G(n){let e=await n.getRootFolder(),t=S(e),o=document.createDocumentFragment();for(let r of t){let i=r.name.toString().trim();for(let[s,c]of r.items){let m=s.toLowerCase().trim(),d=document.createElement("tool-tip");d.text=`${r.name}/${s}`,d.setAttribute("data-searchable-name",`${i}/${m}`);let u=document.createElement("texture-loader");u.dataSource=n,u.item=c,d.append(u),o.append(d)}}let a=document.querySelector("#textures");a.innerHTML="",a.append(o)}function S(n){let e=[];for(let[t,o]of n.subfolders){let a=S(o);e.push(...a),e.push({name:t,items:o.items})}return e}async function M(){let n=window.location.hash.split("/");n[0]==="#github"&&n[1]&&n[2]&&n[3]&&await E(new l(n[1],n[2],n[3],""))}function y(){let n=document.querySelector("#search");n.addEventListener("input",()=>{document.querySelectorAll("[data-searchable-name]").forEach(t=>{if(!(t instanceof HTMLElement))return;let a=t.getAttribute("data-searchable-name")?.includes(n.value);t.style.display=a?"block":"none"})}),document.addEventListener("keydown",e=>{(e.key==="/"||(e.metaKey||e.ctrlKey)&&e.key==="f")&&(e.preventDefault(),n.focus())})}function F(){let n=document.querySelector("#dataSourceMenuOpenItems"),e=document.createElement("div");e.addEventListener("click",R),e.innerText="Open from GitHub",n.append(e)}async function R(){let n=prompt("Enter the URL to a GitHub repo, and we'll find the textures in it:");if(!n)return;let e=n.match(/^(https?:\/\/)?github\.com\/([^\/]+)\/([^\/]+)/);if(!e)return;let[,,t,o]=e,a=`https://api.github.com/repos/${t}/${o}`,r=await fetch(a),{default_branch:i}=await r.json();window.location.hash=`github/${t}/${o}/${i}`,E(new l(t,o,i,""))}window.addEventListener("load",async()=>{F(),y(),await M()});window.customElements.define("animated-texture",g);window.customElements.define("texture-loader",b);window.customElements.define("tool-tip",w);})();
